1642920115
AwuilbDvXz%3A938a1e2d295c24232571b8c03b4dcd5f-13899f921befdf0eb150387830f36e84
s:7872:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjEzODk5ZjkyMWJlZmRmMGViMTUwMzg3ODMwZjM2ZTg0IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6NjU6IjY2NGVlYmYyOGEyZGUxZDk5NzRlNzBhZDg0YWU2NjBlYTkzYzIxNzdfMC5maWxlLnVzZXItY2hhdC50cGwucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6ODg6InRtcC9zbWFydHkvdGVtcGxhdGVzX2MvNjY0ZWViZjI4YTJkZTFkOTk3NGU3MGFkODRhZTY2MGVhOTNjMjE3N18wLmZpbGUudXNlci1jaGF0LnRwbC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjM1Mzc6Ijw/cGhwCi8qIFNtYXJ0eSB2ZXJzaW9uIDMuMS4zNiwgY3JlYXRlZCBvbiAyMDIxLTAxLTE1IDA0OjA4OjA3CiAgZnJvbSAnL2hvbWUvYWJkeWtpbGkvd3d3L3ZpZXdzL2RlZmF1bHQvdXNlci1jaGF0LnRwbCcgKi8KCi8qIEB2YXIgU21hcnR5X0ludGVybmFsX1RlbXBsYXRlICRfc21hcnR5X3RwbCAqLwppZiAoJF9zbWFydHlfdHBsLT5fZGVjb2RlUHJvcGVydGllcygkX3NtYXJ0eV90cGwsIGFycmF5ICgKICAndmVyc2lvbicgPT4gJzMuMS4zNicsCiAgJ3VuaWZ1bmMnID0+ICdjb250ZW50XzYwMDExNTI3YmM5NWMwXzA4NjQzNTUzJywKICAnaGFzX25vY2FjaGVfY29kZScgPT4gZmFsc2UsCiAgJ2ZpbGVfZGVwZW5kZW5jeScgPT4gCiAgYXJyYXkgKAogICAgJzY2NGVlYmYyOGEyZGUxZDk5NzRlNzBhZDg0YWU2NjBlYTkzYzIxNzcnID0+IAogICAgYXJyYXkgKAogICAgICAwID0+ICcvaG9tZS9hYmR5a2lsaS93d3cvdmlld3MvZGVmYXVsdC91c2VyLWNoYXQudHBsJywKICAgICAgMSA9PiAxNjEwNjc5NDI2LAogICAgICAyID0+ICdmaWxlJywKICAgICksCiAgKSwKICAnaW5jbHVkZXMnID0+IAogIGFycmF5ICgKICApLAopLGZhbHNlKSkgewpmdW5jdGlvbiBjb250ZW50XzYwMDExNTI3YmM5NWMwXzA4NjQzNTUzIChTbWFydHlfSW50ZXJuYWxfVGVtcGxhdGUgJF9zbWFydHlfdHBsKSB7Cj8+PGRpdiBjbGFzcz0icHJvZmlsZV9zZWN0aW9uIj4KICAgIDxkaXYgY2xhc3M9IndyYXBwZXIiPiAgIAogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBzMyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyX3NpZGViYXIiPgogICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSI/Y29udHJvbGxlcj11c2VyJmFjdGlvbj1wb3N0Ij5Nb2plIGluemVyw6F0eTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSI/Y29udHJvbGxlcj11c2VyJmFjdGlvbj1jaGF0IiBjbGFzcz0iYWN0aXZlIj5Nb2plIHpwcsOhdnk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iP2NvbnRyb2xsZXI9dXNlciZhY3Rpb249aW5kZXgiPk3Fr2ogcHJvZmlsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ij9jb250cm9sbGVyPXVzZXImYWN0aW9uPWxvZ291dCI+TG9nIG91dDwvYT48L2xpPgoKICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBzOSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2Vfc2VjdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGlmIChlbXB0eSgkX3NtYXJ0eV90cGwtPnRwbF92YXJzWydtZXNzYWdlR3JvdXBzJ10tPnZhbHVlKSkgez8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5OZW3DoXRlIHpwcmF2eTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgfSBlbHNlIHsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAKJF9mcm9tID0gJF9zbWFydHlfdHBsLT5zbWFydHktPmV4dC0+X2ZvcmVhY2gtPmluaXQoJF9zbWFydHlfdHBsLCAkX3NtYXJ0eV90cGwtPnRwbF92YXJzWydtZXNzYWdlR3JvdXBzJ10tPnZhbHVlLCAnZ3JvdXAnKTsKJF9zbWFydHlfdHBsLT50cGxfdmFyc1snZ3JvdXAnXS0+ZG9fZWxzZSA9IHRydWU7CmlmICgkX2Zyb20gIT09IG51bGwpIGZvcmVhY2ggKCRfZnJvbSBhcyAkX3NtYXJ0eV90cGwtPnRwbF92YXJzWydncm91cCddLT52YWx1ZSkgewokX3NtYXJ0eV90cGwtPnRwbF92YXJzWydncm91cCddLT5kb19lbHNlID0gZmFsc2U7Cj8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibWVzc2FnZV9ibG9jayIgaHJlZj0iP2NvbnRyb2xsZXI9dXNlciZhY3Rpb249Y2hhdFBhZ2UmaWQ9PD9waHAgZWNobyAkX3NtYXJ0eV90cGwtPnRwbF92YXJzWydncm91cCddLT52YWx1ZVsnR3JvdXBJZCddOz8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIHMyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL3d3dy5waW5jbGlwYXJ0LmNvbS9waWNkaXIvbWlkZGxlLzM1NS0zNTUzODgxX3N0b2NrdmFkZXItcHJlZGljdGVkLWFkaWctdXNlci1wcm9maWxlLWljb24tcG5nLWNsaXBhcnQucG5naHR0cHM6Ly9jZG4uaWNvbnNjb3V0LmNvbS9pY29uL2ZyZWUvcG5nLTUxMi9hdmF0YXItMzcwLTQ1NjMyMi5wbmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBzMTAgbWVzc2FnZV90ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIHM4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgZWNobyAkX3NtYXJ0eV90cGwtPnRwbF92YXJzWydncm91cCddLT52YWx1ZVsnUGFydG5lck5hbWUnXTs/PgogPD9waHAgZWNobyAkX3NtYXJ0eV90cGwtPnRwbF92YXJzWydncm91cCddLT52YWx1ZVsnUGFydG5lclN1cm5hbWUnXTs/PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgczQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvICRfc21hcnR5X3RwbC0+dHBsX3ZhcnNbJ2dyb3VwJ10tPnZhbHVlWydMYXN0TWVzc2FnZSddOz8+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8P3BocAp9CiRfc21hcnR5X3RwbC0+c21hcnR5LT5leHQtPl9mb3JlYWNoLT5yZXN0b3JlKCRfc21hcnR5X3RwbCwgMSk7Pz4KICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgfT8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+PD9waHAgfQp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YToxOntzOjM0OiJcY29udGVudF82MDAxMTUyN2JjOTVjMF8wODY0MzU1MygpIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXyI6NTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzQ6Ilxjb250ZW50XzYwMDExNTI3YmM5NWMwXzA4NjQzNTUzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czozMToiY29udGVudF82MDAxMTUyN2JjOTVjMF8wODY0MzU1MyI7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTE6Il9zbWFydHlfdHBsIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjU6IlxTbWFydHlfSW50ZXJuYWxfVGVtcGxhdGUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyNDoiU21hcnR5X0ludGVybmFsX1RlbXBsYXRlIjt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZG9jQmxvY2siO047czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX19czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";